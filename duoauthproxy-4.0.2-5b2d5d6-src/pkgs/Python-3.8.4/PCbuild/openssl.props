<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemDefinitionGroup>
    <ClCompile>
      <AdditionalIncludeDirectories>$(opensslIncludeDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <!--XXX DUO MOD: Our version of openssl has libs in the lib folder and it also uses different lib names. -->
      <!--<AdditionalLibraryDirectories>$(opensslOutDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>-->
      <!--<AdditionalDependencies>ws2_32.lib;libcrypto.lib;libssl.lib;%(AdditionalDependencies)</AdditionalDependencies>-->
      <AdditionalLibraryDirectories>$(opensslOutDir)\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>ws2_32.lib;libeay32.lib;ssleay32.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <!--XXX DUO MOD: Our version of openssl does not use these this format for the DLLs -->
  <!--<PropertyGroup>-->
    <!--<_DLLSuffix>-1_1</_DLLSuffix>-->
    <!--<_DLLSuffix Condition="$(Platform) == 'ARM'">$(_DLLSuffix)-arm</_DLLSuffix>-->
    <!--<_DLLSuffix Condition="$(Platform) == 'ARM64'">$(_DLLSuffix)-arm64</_DLLSuffix>-->
  <!--</PropertyGroup>-->
  <ItemGroup>
    <!--XXX DUO MOD: Our version of openssl provides two different DLLs -->
    <!--<_SSLDLL Include="$(opensslOutDir)\libcrypto$(_DLLSuffix).dll" />-->
    <!--<_SSLDLL Include="$(opensslOutDir)\libcrypto$(_DLLSuffix).pdb" />-->
    <!--<_SSLDLL Include="$(opensslOutDir)\libssl$(_DLLSuffix).dll" />-->
    <!--<_SSLDLL Include="$(opensslOutDir)\libssl$(_DLLSuffix).pdb" />-->
    <_SSLDLL Include="$(opensslOutDir)\bin\libeay32.dll" />
    <_SSLDLL Include="$(opensslOutDir)\bin\ssleay32.dll" />
  </ItemGroup>
  <Target Name="_CopySSLDLL" Inputs="@(_SSLDLL)" Outputs="@(_SSLDLL->'$(OutDir)%(Filename)%(Extension)')" AfterTargets="Build">
    <Copy SourceFiles="@(_SSLDLL)" DestinationFolder="$(OutDir)" />
  </Target>
  <Target Name="_CleanSSLDLL" BeforeTargets="Clean">
    <Delete Files="@(_SSLDLL->'$(OutDir)%(Filename)%(Extension)')" TreatErrorsAsWarnings="true" />
  </Target>
</Project>